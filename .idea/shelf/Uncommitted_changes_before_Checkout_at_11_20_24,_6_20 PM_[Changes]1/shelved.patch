Index: app/src/main/java/com/cs407/connectech/repository/AuthRepository.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.cs407.connectech.repository\n\nclass AuthRepository {\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/cs407/connectech/repository/AuthRepository.kt b/app/src/main/java/com/cs407/connectech/repository/AuthRepository.kt
--- a/app/src/main/java/com/cs407/connectech/repository/AuthRepository.kt	(revision 7a1cd82ede465bd1f052110ffbd20c4371968121)
+++ b/app/src/main/java/com/cs407/connectech/repository/AuthRepository.kt	(date 1731975238057)
@@ -1,4 +1,59 @@
 package com.cs407.connectech.repository
 
-class AuthRepository {
-}
\ No newline at end of file
+import com.cs407.connectech.model.User
+import com.cs407.connectech.network.ApiService
+import com.cs407.connectech.network.requests.LoginRequest
+import com.cs407.connectech.network.requests.RegisterRequest
+import com.cs407.connectech.network.requests.ResetPasswordRequest
+import kotlinx.coroutines.Dispatchers
+import kotlinx.coroutines.withContext
+import retrofit2.Response
+import java.lang.Exception
+
+class AuthRepository(private val apiService: ApiService) {
+
+    suspend fun login(email: String, password: String): Result<User> {
+        return withContext(Dispatchers.IO) {
+            try {
+                val response: Response<User> = apiService.login(LoginRequest(email, password))
+                if (response.isSuccessful) {
+                    Result.success(response.body()!!)
+                } else {
+                    Result.failure(Exception("Login failed: ${response.message()}"))
+                }
+            } catch (e: Exception) {
+                Result.failure(e)
+            }
+        }
+    }
+
+    suspend fun register(email: String, password: String): Result<User> {
+        return withContext(Dispatchers.IO) {
+            try {
+                val response: Response<User> = apiService.register(RegisterRequest(email, password))
+                if (response.isSuccessful) {
+                    Result.success(response.body()!!)
+                } else {
+                    Result.failure(Exception("Registration failed: ${response.message()}"))
+                }
+            } catch (e: Exception) {
+                Result.failure(e)
+            }
+        }
+    }
+
+    suspend fun resetPassword(email: String): Result<Void?> {
+        return withContext(Dispatchers.IO) {
+            try {
+                val response: Response<Void> = apiService.resetPassword(ResetPasswordRequest(email))
+                if (response.isSuccessful) {
+                    Result.success(response.body())
+                } else {
+                    Result.failure(Exception("Password reset failed: ${response.message()}"))
+                }
+            } catch (e: Exception) {
+                Result.failure(e)
+            }
+        }
+    }
+}
Index: app/src/main/java/com/cs407/connectech/ConnecTechApp.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.cs407.connectech\n\nimport android.os.Bundle\nimport androidx.activity.enableEdgeToEdge\nimport androidx.appcompat.app.AppCompatActivity\nimport androidx.core.view.ViewCompat\nimport androidx.core.view.WindowInsetsCompat\n\nclass ConnecTechApp : AppCompatActivity() {\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        enableEdgeToEdge()\n        setContentView(R.layout.fragment_container)\n        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main)) { v, insets ->\n            val systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars())\n            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom)\n            insets\n        }\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/cs407/connectech/ConnecTechApp.kt b/app/src/main/java/com/cs407/connectech/ConnecTechApp.kt
--- a/app/src/main/java/com/cs407/connectech/ConnecTechApp.kt	(revision 7a1cd82ede465bd1f052110ffbd20c4371968121)
+++ b/app/src/main/java/com/cs407/connectech/ConnecTechApp.kt	(date 1732148076227)
@@ -3,18 +3,17 @@
 import android.os.Bundle
 import androidx.activity.enableEdgeToEdge
 import androidx.appcompat.app.AppCompatActivity
-import androidx.core.view.ViewCompat
-import androidx.core.view.WindowInsetsCompat
+import com.cs407.connectech.auth.LoginFragment
 
 class ConnecTechApp : AppCompatActivity() {
     override fun onCreate(savedInstanceState: Bundle?) {
         super.onCreate(savedInstanceState)
         enableEdgeToEdge()
         setContentView(R.layout.fragment_container)
-        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main)) { v, insets ->
-            val systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars())
-            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom)
-            insets
+        if (savedInstanceState == null) {
+            supportFragmentManager.beginTransaction()
+                .replace(R.id.fragment_container, LoginFragment())
+                .commit()
         }
     }
 }
\ No newline at end of file
